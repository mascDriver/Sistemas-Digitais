$date
	Thu May 13 21:04:23 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 1 ! valid $end
$var wire 16 " resultado [15:0] $end
$var wire 1 # ready $end
$var reg 16 $ a [15:0] $end
$var reg 16 % b [15:0] $end
$var reg 16 & c [15:0] $end
$var reg 1 ' clock $end
$var reg 1 ( enable $end
$var reg 1 ) reset $end
$var reg 8 * x [7:0] $end
$scope module ula0 $end
$var wire 1 ' clock $end
$var wire 1 ( enable $end
$var wire 1 ) reset $end
$var wire 16 + valor_a [15:0] $end
$var wire 16 , valor_b [15:0] $end
$var wire 16 - valor_c [15:0] $end
$var wire 8 . valor_x [7:0] $end
$var wire 1 ! valid $end
$var wire 16 / result [15:0] $end
$var wire 1 # ready $end
$var wire 2 0 M2 [1:0] $end
$var wire 2 1 M1 [1:0] $end
$var wire 2 2 M0 [1:0] $end
$var wire 1 3 LX $end
$var wire 1 4 LS $end
$var wire 1 5 LH $end
$var wire 1 6 H $end
$scope module bc0 $end
$var wire 1 ' clock $end
$var wire 1 ( enable $end
$var wire 1 ) reset $end
$var wire 1 # ready $end
$var wire 1 ! done $end
$var wire 2 7 M2 [1:0] $end
$var wire 2 8 M1 [1:0] $end
$var wire 2 9 M0 [1:0] $end
$var wire 1 3 LX $end
$var wire 1 4 LS $end
$var wire 1 5 LH $end
$var wire 1 6 H $end
$var reg 4 : state [3:0] $end
$upscope $end
$scope module bo0 $end
$var wire 1 6 H $end
$var wire 1 5 LH $end
$var wire 1 4 LS $end
$var wire 1 3 LX $end
$var wire 2 ; M0 [1:0] $end
$var wire 2 < M1 [1:0] $end
$var wire 2 = M2 [1:0] $end
$var wire 1 ' clock $end
$var wire 16 > resultado [15:0] $end
$var wire 16 ? valor_a [15:0] $end
$var wire 16 @ valor_b [15:0] $end
$var wire 16 A valor_c [15:0] $end
$var wire 8 B valor_x [7:0] $end
$var wire 16 C valor_x16 [15:0] $end
$var wire 16 D out_x [15:0] $end
$var wire 16 E out_ula [15:0] $end
$var wire 16 F out_s [15:0] $end
$var wire 16 G out_mux2 [15:0] $end
$var wire 16 H out_mux1 [15:0] $end
$var wire 16 I out_mux0 [15:0] $end
$var wire 16 J out_h [15:0] $end
$scope module multiplicador_somador0 $end
$var wire 1 6 h $end
$var wire 16 K out [15:0] $end
$var wire 16 L b [15:0] $end
$var wire 16 M a [15:0] $end
$upscope $end
$scope module mux0 $end
$var wire 16 N a [15:0] $end
$var wire 16 O b [15:0] $end
$var wire 16 P c [15:0] $end
$var wire 16 Q d [15:0] $end
$var wire 2 R set [1:0] $end
$var wire 16 S out [15:0] $end
$upscope $end
$scope module mux1 $end
$var wire 16 T a [15:0] $end
$var wire 2 U set [1:0] $end
$var wire 16 V out [15:0] $end
$var wire 16 W d [15:0] $end
$var wire 16 X c [15:0] $end
$var wire 16 Y b [15:0] $end
$upscope $end
$scope module mux2 $end
$var wire 16 Z b [15:0] $end
$var wire 2 [ set [1:0] $end
$var wire 16 \ out [15:0] $end
$var wire 16 ] d [15:0] $end
$var wire 16 ^ c [15:0] $end
$var wire 16 _ a [15:0] $end
$upscope $end
$scope module reg_h $end
$var wire 1 ' clk $end
$var wire 16 ` in [15:0] $end
$var wire 1 5 l $end
$var reg 16 a out [15:0] $end
$upscope $end
$scope module reg_s $end
$var wire 1 ' clk $end
$var wire 16 b in [15:0] $end
$var wire 1 4 l $end
$var reg 16 c out [15:0] $end
$upscope $end
$scope module reg_x $end
$var wire 1 ' clk $end
$var wire 16 d in [15:0] $end
$var wire 1 3 l $end
$var reg 16 e out [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx e
b11 d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
b0 [
b11 Z
bx Y
bx X
bx W
b11 V
b0 U
b11 T
b11 S
b0 R
b11 Q
b11 P
b11 O
b11 N
b11 M
bx L
bx K
bx J
b11 I
b11 H
bx G
bx F
bx E
bx D
b11 C
b11 B
b11 A
b11 @
b11 ?
bx >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
06
05
04
03
b0 2
b0 1
b0 0
bx /
b11 .
b11 -
b11 ,
b11 +
b11 *
1)
0(
0'
b11 &
b11 %
b11 $
1#
bx "
0!
$end
#1
13
0#
b1 :
1(
0)
1'
#2
0'
#3
b1 1
b1 8
b1 <
b1 U
16
03
14
b1001 E
b1001 K
b1001 `
b1001 b
b11 G
b11 L
b11 \
b10 :
b11 D
b11 Y
b11 _
b11 e
1'
#4
0'
#5
b11011 E
b11011 K
b11011 `
b11011 b
b1 2
b1 9
b1 ;
b1 R
b1001 G
b1001 L
b1001 \
b0 1
b0 8
b0 <
b0 U
b10 0
b10 7
b10 =
b10 [
04
15
b11 :
b1001 "
b1001 /
b1001 >
b1001 F
b1001 X
b1001 ^
b1001 c
1'
#6
0'
#7
b1001 E
b1001 K
b1001 `
b1001 b
b11 G
b11 L
b11 \
b10 2
b10 9
b10 ;
b10 R
b0 0
b0 7
b0 =
b0 [
14
05
b100 :
b11011 J
b11011 W
b11011 ]
b11011 a
1'
#8
0'
#9
b1001 H
b1001 M
b1001 V
b11011 G
b11011 L
b11011 \
b100100 E
b100100 K
b100100 `
b100100 b
b0 2
b0 9
b0 ;
b0 R
b10 1
b10 8
b10 <
b10 U
b11 0
b11 7
b11 =
b11 [
06
04
15
b101 :
1'
#10
0'
#11
b11 2
b11 9
b11 ;
b11 R
b11 H
b11 M
b11 V
b0 1
b0 8
b0 <
b0 U
14
b100111 E
b100111 K
b100111 `
b100111 b
05
b100100 G
b100100 L
b100100 \
b110 :
b100100 J
b100100 W
b100100 ]
b100100 a
1'
#12
0'
#13
1!
b110 E
b110 K
b110 `
b110 b
b11 G
b11 L
b11 \
b0 2
b0 9
b0 ;
b0 R
b0 0
b0 7
b0 =
b0 [
04
b111 :
b100111 "
b100111 /
b100111 >
b100111 F
b100111 X
b100111 ^
b100111 c
1'
#14
0'
